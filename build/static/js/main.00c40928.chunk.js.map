{"version":3,"sources":["Navbar.js","Form.jsx","Alert.jsx","Iform.jsx","App.jsx","index.js"],"names":["Navbar","props","className","num","mode","exact","to","type","id","role","onClick","threecolor","togglemode","htmlFor","Form","useState","text","setText","value","onChange","event","target","style","backgroundColor","color","placeholder","rows","length","showalert","texta","toUpperCase","toLowerCase","split","Alert","alert","msg","Iform","fname","lname","Eid","number","name","setname","changing","preValue","class","for","App","setmode","setalert","setnum","setTimeout","document","body","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.00c40928.chunk.js","sourcesContent":["import React from 'react';\r\n// import Link from 'react-router-dom'\r\nimport { NavLink } from 'react-router-dom';\r\nconst Navbar = (props) => {\r\n\r\n   \r\n\r\n     const chngingred = () =>{\r\n         props.threecolor(1);\r\n     }\r\n     const chnginggreen = () =>{\r\n        props.threecolor(3);\r\n    }\r\n    const chngingyellow = () =>{\r\n        props.threecolor(2);\r\n    }\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.num ===1 ? 'dark' :props.mode} bg-${props.num ===1 ? 'dark' :props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <NavLink className=\"navbar-brand\" exact to=\"/\">TextChngr</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n                            <li className=\"nav-item\" >\r\n                                <NavLink className=\"nav-link active\" aria-current=\"page\" exact to=\"/\">Home</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" exact to=\"/contact\">Contact us</NavLink>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick = {chngingred}>Red</button>\r\n                            <button type=\"button\" className=\"btn btn-warning\" onClick = {chngingyellow}>Yellow</button>\r\n                            <button type=\"button\" className=\"btn btn-success\" onClick = {chnginggreen}>Green</button>\r\n                        </div>\r\n\r\n                        <div className={`mx-2 form-check form-switch text-${props.mode === 'dark' || props.num === 1 ? 'light' : 'dark'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\nexport default Navbar;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst Form = (props) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const chngeupr = () => {\r\n        if(text.length === 0)\r\n        props.showalert(\"Please Write Something\" , \"danger\");\r\n        else\r\n        {\r\n        let texta = text.toUpperCase();\r\n        setText(texta);\r\n        props.showalert(\"Converted to UpperCase\" , \"success\");\r\n        };\r\n    };\r\n\r\n    const chngelwr = () => {\r\n        if(text.length === 0)\r\n        props.showalert(\"Please Write Something\" , \"danger\");\r\n        else{\r\n        let texta = text.toLowerCase();\r\n        setText(texta);\r\n        props.showalert(\"Converted to LowerCase\" , \"success\");\r\n        };\r\n    }\r\n\r\n    const cleartxt = () => {\r\n        setText(\"\")\r\n        props.showalert(\"Clear to write\" , \"success\");\r\n    }\r\n    const lelo = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"mb-3 my-3\">\r\n                <h1 className = {`text-${props.mode === 'light'?'dark':'light'}`}>Enter Text to Convert</h1>\r\n                <textarea className=\"form-control\" value={text} onChange={lelo} style={{backgroundColor: props.mode ==='dark'?'#d7e8e8' : 'white',color: props.mode === 'dark'?'black':'black'}} placeholder=\"Enter your text\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={chngeupr}>Convert to Uppercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={chngelwr}>Convert to Lowercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={cleartxt}>Clear Text</button>\r\n            <div className=\"mb-3 my-1\">\r\n                <h1 className = {`text-${props.mode === 'light'?'dark':'light'}`}>Text Summary</h1>\r\n                <p className = {`text-${props.mode === 'light'?'dark':'light'}`}> word : {text.split(\" \").length} characters : {text.length}</p>\r\n                <h1 className = {`text-${props.mode === 'light'?'dark':'light'}`}>Preview</h1>\r\n                <p>{text.length>0?text : \"Enter something in box to preview\"}</p>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Form;","import React from 'react';\r\nconst Alert =(props)=>{\r\n    return(\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type.toUpperCase()} !</strong> {props.alert.msg}\r\n        \r\n      </div>\r\n      \r\n    );\r\n}\r\nexport default Alert;","\r\nimport React, { useState } from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Iform = () => {\r\n    const [name, setname] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        Eid: \"\",\r\n        number: \"\"\r\n    });\r\n    // const onSubmits = (event) => {\r\n    //     event.preventDefault();\r\n    // };\r\n    const changing = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        setname((preValue) => {\r\n            return {\r\n                ...preValue,\r\n                [name]: value\r\n            }\r\n\r\n            // if (name === \"fname\") {\r\n            //     return {\r\n            //         fname: value,\r\n            //         lname: preValue.lname,\r\n            //         Eid: preValue.Eid,\r\n            //         number: preValue.number\r\n            //     };\r\n            // }\r\n            // if (name === \"lname\") {\r\n            //     return {\r\n            //         lname: value,\r\n            //         fname: preValue.fname,\r\n            //         Eid: preValue.Eid,\r\n            //         number: preValue.number\r\n            //     };\r\n            // }\r\n            // if (name === \"Eid\") {\r\n            //     return {\r\n            //         lname: preValue.lname,\r\n            //         fname: preValue.fname,\r\n            //         Eid: value,\r\n            //         number: preValue.number\r\n            //     };\r\n            // }\r\n            // if (name === \"number\") {\r\n            //     return {\r\n            //         number: value,\r\n            //         fname: preValue.fname,\r\n            //         Eid: preValue.Eid,\r\n            //         lname: preValue.lname\r\n            //     };\r\n            // }\r\n        });\r\n\r\n    };\r\n    const submits = () => {\r\n        if(name.number.length === 0)\r\n        alert(\"Please Write Something\");\r\n        else if(name.Eid.length === 0)\r\n        alert(\"PLease write your email-id\");\r\n        else\r\n        alert(`Thank You ${name.fname} ${name.lname} For Contacting your message \"${name.number}\" is delivered`);\r\n    }\r\n    return (\r\n        <>\r\n\r\n              <div className =\"container\">\r\n              <h1>Fill this Form </h1>\r\n            <div className=\"row\">\r\n                <div class=\"col\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"First name\" aria-label=\"First name\" onChange={changing}\r\n                        name=\"fname\"\r\n                        value={name.fname} />\r\n                </div>\r\n                <div class=\"col\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Last name\" aria-label=\"Last name\" onChange={changing}\r\n                    name=\"lname\"\r\n                    value={name.lname} />\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"formGroupExampleInput\" class=\"form-label\">E-mail ID</label>\r\n                <input type=\"email\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Example input placeholder\" onChange={changing}\r\n                    name=\"Eid\"\r\n                    value={name.Eid}/>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n                <label for=\"formGroupExampleInput2\" class=\"form-label\">Your Message</label>\r\n                <textarea class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Another input placeholder\" onChange={changing}\r\n                    name=\"number\"\r\n                    value={name.number} />\r\n            </div>\r\n            <div class=\" mx-auto\" >\r\n                {/* <label for=\"formGroupExampleInput\" class=\"form-label\">E-mail ID</label> */}\r\n                <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={submits}>Submit</button>\r\n            </div>\r\n\r\n            \r\n            </div>\r\n            {/* <h1> Hello!!  </h1>\r\n            <p>\r\n                {name.fname} {name.lname}\r\n            </p>\r\n            {name.Eid}\r\n            <p>\r\n                <p>\r\n                    {name.number}\r\n                </p>\r\n            </p>\r\n            <form onSubmit={onSubmits}>\r\n                <input type=\"text\" placeHolder=\"Enter Your FirstName\" onChange={changing}\r\n                    name=\"fname\"\r\n                    value={name.fname}\r\n                />\r\n                <br />\r\n                <br />\r\n                <input type=\"text\" placeHolder=\"Enter Your LastName\" onChange={changing}\r\n                    name=\"lname\"\r\n                    value={name.lname}\r\n                />\r\n                <br />\r\n                <br />\r\n                <input type=\"email\" placeHolder=\"Enter Your email\" onChange={changing}\r\n                    name=\"Eid\"\r\n                    value={name.Eid}\r\n                />\r\n                <br />\r\n                <br />\r\n                <input type=\"text\" placeHolder=\"Enter Your number\" onChange={changing}\r\n                    name=\"number\"\r\n                    value={name.number}\r\n                />\r\n                <br />\r\n                <input type=\"submit\" onClick={submits} />\r\n            </form> */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Iform;","import React, { useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Form from './Form';\r\nimport Alert from './Alert';\r\nimport Iform from './Iform';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst App = () => {\r\n    const [mode, setmode] = useState(\"light\");\r\n    const [alert, setalert] = useState(null);\r\n    const [num, setnum] = useState(0)\r\n\r\n    let showalert = (msg, type) => {\r\n        setalert({\r\n            msg: msg,\r\n            type: type\r\n        })\r\n        setTimeout(() => {\r\n            setalert(null);\r\n        }, 1500);\r\n    }\r\n\r\n    const threecolor = (id) => {\r\n        if (id === 1) {\r\n            document.body.style.backgroundColor = '#b23636';\r\n            showalert(\"Red theme is enabled\", \"success\");\r\n            setnum(1);\r\n            // setmode('dark');\r\n        }\r\n        if (id === 2) {\r\n            document.body.style.backgroundColor = '#d3d31e';\r\n            showalert(\"Yellow theme is enabled\", \"success\");\r\n            // setmode('dark')\r\n            setnum(1);\r\n        }\r\n        if (id === 3) {\r\n            document.body.style.backgroundColor = 'Green';\r\n            showalert(\"Green theme is enabled\", \"success\");\r\n            setnum(1);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const togglemode = () => {\r\n        if (mode === 'light') {\r\n            setmode('dark');\r\n            document.body.style.backgroundColor = '#0a327d';\r\n            showalert(\"darkmode is enabled\", \"success\");\r\n        }\r\n        else {\r\n            setmode('light');\r\n            document.body.style.backgroundColor = 'white';\r\n            showalert(\"lightmode is enabled\", \"success\");\r\n            setnum(0);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n                <Navbar mode={mode} togglemode={togglemode} threecolor={threecolor} num={num} />\r\n                <Alert alert={alert} />\r\n            <Switch>\r\n                    <Route path=\"/contact\">\r\n                        <Iform />\r\n                    </Route>\r\n\r\n                    <Route path=\"/\">\r\n                        <div className=\"container\">\r\n                            <Form mode={mode} showalert={showalert} />\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <>\n  <BrowserRouter>\n  <App/>\n  </BrowserRouter>\n  </>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}